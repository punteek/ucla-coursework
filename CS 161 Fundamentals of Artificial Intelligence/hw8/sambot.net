net
{
	propagationenginegenerator1791944048146838126L = "edu.ucla.belief.approx.BeliefPropagationSettings@6bf9009c";
	recoveryenginegenerator6944530267470113528l = "edu.ucla.util.SettingsImpl@9ff3c4f";
	jenginegenerator6060830225489488864L = "edu.ucla.belief.inference.JoinTreeSettings@ec394fa";
	node_size = (130.0 55.0);
}

node LightSensorHealth
{
	states = ("OK" "Broken" );
	position = (155 -377);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable3";
	label = "LightSensorHealth";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node ExpectingGuests
{
	states = ("Yes" "No" );
	position = (159 -124);
	diagnosistype = "AUXILIARY";
	ismapvariable = "false";
	ID = "variable2";
	label = "ExpectingGuests";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node DogBarking
{
	states = ("Yes" "No" );
	position = (363 -116);
	diagnosistype = "AUXILIARY";
	ismapvariable = "false";
	ID = "variable2";
	label = "DogBarking";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node Battery
{
	states = ("OK" "Dead" );
	position = (238 -216);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable7";
	label = "Battery";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node SoundSensorHealth
{
	states = ("OK" "Broken" );
	position = (320 -377);
	diagnosistype = "AUXILIARY";
	ismapvariable = "false";
	ID = "variable3";
	label = "SoundSensorHealth";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node DogBowelTrouble
{
	states = ("Yes" "No" );
	position = (389 2);
	diagnosistype = "AUXILIARY";
	ismapvariable = "false";
	ID = "variable2";
	label = "DogBowelTrouble";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node HearableBarking
{
	states = ("Yes" "No" );
	position = (436 -197);
	diagnosistype = "AUXILIARY";
	ismapvariable = "false";
	ID = "variable2";
	label = "HearableBarking";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node SoundSensor
{
	states = ("On" "Off" );
	position = (310 -300);
	diagnosistype = "AUXILIARY";
	ismapvariable = "false";
	ID = "variable6";
	label = "SoundSensor";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node FamilyHome
{
	states = ("Yes" "No" );
	position = (15 -46);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable2";
	label = "FamilyHome";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node OutdoorLight
{
	states = ("On" "Off" );
	position = (74 -215);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable6";
	label = "OutdoorLight";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node LightSensor
{
	states = ("On" "Off" );
	position = (153 -304);
	diagnosistype = "AUXILIARY";
	ismapvariable = "false";
	ID = "variable6";
	label = "LightSensor";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
node DogOutside
{
	states = ("Yes" "No" );
	position = (231 -48);
	diagnosistype = "AUXILIARY";
	ismapvariable = "false";
	ID = "variable2";
	label = "DogOutside";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	excludepolicy = "include whole CPT";
}
potential ( LightSensorHealth | )
{
	data = (	0.5	0.5	);
}
potential ( ExpectingGuests | )
{
	data = (	0.5	0.5	);
}
potential ( DogBarking | DogOutside )
{
	data = ((	0.5	0.5	)
		(	0.5	0.5	));
}
potential ( Battery | )
{
	data = (	0.5	0.5	);
}
potential ( SoundSensorHealth | )
{
	data = (	0.5	0.5	);
}
potential ( DogBowelTrouble | )
{
	data = (	0.5	0.5	);
}
potential ( HearableBarking | DogBarking )
{
	data = ((	0.5	0.5	)
		(	0.5	0.5	));
}
potential ( SoundSensor | HearableBarking SoundSensorHealth Battery )
{
	data = ((((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	)))
		(((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	))));
}
potential ( FamilyHome | ExpectingGuests )
{
	data = ((	0.5	0.5	)
		(	0.5	0.5	));
}
potential ( OutdoorLight | ExpectingGuests FamilyHome )
{
	data = (((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	)));
}
potential ( LightSensor | LightSensorHealth OutdoorLight Battery )
{
	data = ((((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	)))
		(((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	))));
}
potential ( DogOutside | DogBowelTrouble FamilyHome )
{
	data = (((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	)));
}
